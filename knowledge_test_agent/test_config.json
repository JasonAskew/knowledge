{
  "api_configuration": {
    "base_url": "http://localhost:8000",
    "timeout_seconds": 30,
    "max_retries": 3,
    "retry_delay": 1.0
  },
  
  "mcp_server_configuration": {
    "server_type": "neo4j_exact_proxy",
    "port": 8001,
    "exposed_tools": [
      "read-neo4j-cypher",
      "write-neo4j-cypher", 
      "get-neo4j-schema"
    ],
    "description": "Pure proxy to Neo4j, no custom search logic"
  },
  
  "search_method_configuration": {
    "default_method": "hybrid",
    "enable_reranking_by_default": true,
    "available_methods": [
      "optimized_keyword",
      "vector", 
      "hybrid",
      "graph",
      "graphrag",
      "full_text"
    ],
    "deprecated_methods": [
      "text2cypher"
    ]
  },
  
  "performance_benchmarks": {
    "optimized_keyword": {
      "accuracy_target": 0.90,
      "speed_target_ms": 200,
      "description": "Fast keyword search with high precision",
      "use_case": "Real-time queries, fast response"
    },
    "vector": {
      "accuracy_target": 0.78,
      "speed_target_ms": 500,
      "description": "Semantic similarity search with embeddings", 
      "use_case": "Semantic similarity, balanced performance"
    },
    "hybrid": {
      "accuracy_target": 0.73,
      "speed_target_ms": 1000,
      "description": "Combined search with reranking",
      "use_case": "Comprehensive search, best coverage"
    },
    "graph": {
      "accuracy_target": 0.82,
      "speed_target_ms": 800,
      "description": "Entity-based graph traversal",
      "use_case": "Entity-based, domain-specific queries"
    },
    "graphrag": {
      "accuracy_target": 0.80,
      "speed_target_ms": 1500,
      "description": "Graph reasoning with community detection",
      "use_case": "Complex reasoning, highest accuracy"
    },
    "full_text": {
      "accuracy_target": 0.75,
      "speed_target_ms": 300,
      "description": "Traditional text search",
      "use_case": "Traditional keyword matching"
    }
  },
  
  "performance_grading": {
    "excellent": {
      "accuracy_threshold": 0.90,
      "speed_threshold_ms": 200,
      "grade": "A+",
      "description": "Exceeds targets significantly"
    },
    "very_good": {
      "accuracy_threshold": 0.85,
      "speed_threshold_ms": 400,
      "grade": "A",
      "description": "Meets or exceeds targets"
    },
    "good": {
      "accuracy_threshold": 0.75,
      "speed_threshold_ms": 800,
      "grade": "B+",
      "description": "Good performance, minor improvements needed"
    },
    "acceptable": {
      "accuracy_threshold": 0.70,
      "speed_threshold_ms": 1500,
      "grade": "B",
      "description": "Acceptable performance"
    },
    "poor": {
      "accuracy_threshold": 0.60,
      "speed_threshold_ms": 3000,
      "grade": "C",
      "description": "Below expectations but functional"
    },
    "failing": {
      "grade": "F",
      "description": "Significant issues, requires attention"
    }
  },
  
  "test_configuration": {
    "default_test_file": "test.csv",
    "validation_mandatory": true,
    "continue_on_invalid_tests": true,
    "max_concurrent_tests": 5,
    "delay_between_requests_ms": 100,
    "semantic_similarity_threshold": 0.7
  },
  
  "reranking_configuration": {
    "enabled": true,
    "model": "cross-encoder/ms-marco-MiniLM-L-6-v2",
    "weights": {
      "cross_encoder": 0.4,
      "original_score": 0.25,
      "keyword_boost": 0.15,
      "metadata_boost": 0.2
    }
  },
  
  "reporting_configuration": {
    "output_directory": "../data/test_results/",
    "generate_csv": true,
    "generate_markdown": true,
    "generate_json": true,
    "include_performance_charts": false,
    "timestamp_format": "%Y%m%d_%H%M%S"
  },
  
  "system_requirements": {
    "minimum_documents": 100,
    "minimum_chunks": 1000,
    "minimum_entities": 5000,
    "neo4j_version": "5.x",
    "python_version": "3.9+",
    "required_packages": [
      "requests",
      "pandas", 
      "sentence-transformers",
      "numpy",
      "neo4j"
    ]
  },
  
  "database_configuration": {
    "neo4j_uri": "bolt://localhost:7687",
    "neo4j_user": "neo4j",
    "neo4j_password": "knowledge123",
    "connection_timeout": 15,
    "query_timeout": 30
  },
  
  "logging_configuration": {
    "level": "INFO",
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "console_output": true,
    "file_output": false
  }
}